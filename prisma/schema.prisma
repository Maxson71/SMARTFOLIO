generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?

  accounts      Account[]
  sessions      Session[]
  portfolios    Portfolio[]

  CryptoTransaction CryptoTransaction[]
  SharesTransaction SharesTransaction[]
  FiatTransaction FiatTransaction[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Portfolio {
  id          String    @id @default(cuid())
  name        String
  balance     Float     @default(0)
  difference      Float    @default(0)

  user        User?     @relation(fields: [userEmail], references: [email])
  userEmail   String?

  CryptoTransaction CryptoTransaction[]
  SharesTransaction SharesTransaction[]
  FiatTransaction   FiatTransaction[]
  @@unique([id, userEmail])
}

model CryptoTransaction {
  id              String    @id @default(cuid())
  idCrypto        String
  nameCrypto      String
  tagCrypto       String
  imageCrypto     String
  amount          Float
  price           Float
  balance         Float    @default(0)
  currentPrice    Float    @default(0)
  difference      Float    @default(0)

  date            DateTime @default(now())

  Portfolio       Portfolio? @relation(fields: [PortfolioId], references: [id])
  PortfolioId     String?

  user            User?     @relation(fields: [userEmail], references: [email])
  userEmail       String?

  @@unique([id, userEmail])
}

model SharesTransaction {
  id              String    @id @default(cuid())
  idShares        String
  nameShares      String
  tagShares       String
  imageShares     String
  amount          Float
  price           Float
  balance         Float    @default(0)
  date            DateTime @default(now())

  Portfolio       Portfolio? @relation(fields: [PortfolioId], references: [id])
  PortfolioId     String?

  user            User?     @relation(fields: [userEmail], references: [email])
  userEmail       String?

  @@unique([id, userEmail])
}

model FiatTransaction {
  id              String    @id @default(cuid())
  idFiat          String
  nameFiat        String
  tagFiat         String
  imageFiat       String
  amount          Float
  price           Float
  balance         Float      @default(0)
  date            DateTime   @default(now())

  Portfolio       Portfolio? @relation(fields: [PortfolioId], references: [id])
  PortfolioId     String?

  user            User?     @relation(fields: [userEmail], references: [email])
  userEmail       String?

  @@unique([id, userEmail])
}
